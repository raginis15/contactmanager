{"version":3,"sources":["Context.js","Component/contacts/Contact.js","Component/contacts/Contacts.js","Component/layout/Header.js","Component/pages/About.js","Component/test/Test.js","Component/pages/NotFound.js","Component/layout/TextInputGroup.js","Component/contacts/AddContact.js","Component/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","address","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","tittled","href","defaultProps","About","Test","title","body","fetch","then","response","json","_this$state","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","Context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02f35b0c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\"\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n        //using id as payload to delete the contacts\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n      case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact=>contact.id===action.payload.id ?(contact=action.payload):contact)\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\nasync componentDidMount(){\r\n const res= await axios.get('https://jsonplaceholder.typicode.com/users')\r\n  this.setState({contacts: res.data});\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n     const res= await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n   dispatch({ type: \"DELETE_CONTACT\", payload: id })\r\n };\r\n\r\n  render() {\r\n    const { id, name, email, address } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                <i className=\"fas fa-pencil-alt\"\r\n                style={{\r\n                  cursor:\"pointer\",\r\n                  float:\"right\",\r\n                  color:\"black\",\r\n                  marginRight:\"1rem\"\r\n                }}\r\n                ></i>\r\n                </Link>\r\n              \r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Address: {address}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n            <h1 className=\"display-4 mb-4\"><span className=\"text-danger\">Contact</span> List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = props => {\r\n  const { tittled } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {tittled}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add \r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  tittled: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n  tittled: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\n class Test extends Component {\r\n     state={\r\n      title:\"\" ,\r\n      body:\"\"  \r\n    };\r\n     componentDidMount(){\r\n       fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n      title:data.title,\r\n      body:data.body\r\n  }));\r\n     }\r\n    \r\n    render() {\r\n        const {title,body}=this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Test","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">Error 404</span>: Page not found</h1>\r\n            <p className=\"lead\">Sorry, that page does noot exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control form-control-lg',{\r\n          'is-invalid': error\r\n        })}\r\n        //is-invalid class name for errors\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div> }  \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  error: PropTypes.string.isRequired\r\n\r\n};\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\" //will be text for all the fields if not defined\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\n//import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\n\r\n//controlled components\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, address } = this.state;\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (address === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          address: \"Address is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name: name,\r\n      email: email,\r\n      address: address\r\n    };\r\n    const res= await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n\r\n    //clear state//\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\")\r\n  };\r\n\r\n  render() {\r\n    const { name, email, address, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                    placeholder=\"enter address\"\r\n                    value={address}\r\n                    onChange={this.onChange}\r\n                    error={errors.address}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../Context\";\r\n//import uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\n\r\n//controlled components\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    address: \"\",\r\n    errors: {}\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  async componentDidMount(){\r\n      const{id}=this.props.match.params;\r\n      const res= await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      const contact=res.data;\r\n      //const phone= this.state.address;\r\n      this.setState({\r\n          name:contact.name,\r\n          email:contact.email,\r\n         // phone:contact.phone\r\n         address:contact.address\r\n      })\r\n  }\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, address } = this.state;\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          name: \"Name is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          email: \"Email is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (address === \"\") {\r\n      this.setState({\r\n        errors: {\r\n          address: \"Address is required\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    const updContact={\r\n        name,\r\n        email,\r\n        address,\r\n    }\r\n    \r\n  const {id} =this.props.match.params;\r\n  const res= await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n  dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n    //clear state//\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      address: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push(\"/\")\r\n  };\r\n\r\n  render() {\r\n    const { name, email, address, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Address\"\r\n                    name=\"address\"\r\n                    placeholder=\"enter address\"\r\n                    value={address}\r\n                    onChange={this.onChange}\r\n                    error={errors.address}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './Component/contacts/Contacts';\nimport Header from './Component/layout/Header';\nimport About from './Component/pages/About';\nimport Test from './Component/test/Test';\nimport NotFound from './Component/pages/NotFound';\nimport AddContact from './Component/contacts/AddContact';\nimport EditContact from './Component/contacts/EditContact';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './Context';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider>\n\t\t\t\t<Router>\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={Contacts} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/contact/add\" component={AddContact} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/contact/edit/:id\" component={EditContact} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/test\" component={Test} />\n\t\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Router>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}